// generic anim
@mixin anim($transition) {
	   -moz-transition: $transition;
	     -o-transition: $transition;
	    -ms-transition: $transition;
	-webkit-transition: $transition;
          transition: $transition;
}

// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
  -webkit-backface-visibility: hidden;
  outline: 1px solid transparent;
	backface-visibility: hidden;
}

// scale
@mixin scale($x,$y) {
	 @include transform(scale($x,$y));
}
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}

// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
  -webkit-backface-visibility: hidden;
  outline: 1px solid transparent;
	backface-visibility: hidden;
}
//transform origin
@mixin transform-origin ($origin) {
    moz-transform-origin: $origin;
	     -o-transform-origin: $origin;
	    -ms-transform-origin: $origin;
	-webkit-transform-origin: $origin;
          transform-origin: $origin;
}
//transition delay origin
@mixin transition-delay ($delay) {
    -moz-transition-delay: $delay;
	     -o-transition-delay: $delay;
	    -ms-transition-delay: $delay;
	-webkit-transition-delay: $delay;
          transition-delay: $delay;
}

@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

@mixin flex-wrap($value: nowrap) {
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else {
    -ms-flex-wrap: $value;
  }
  flex-wrap: $value;
}

@mixin flex($value) {
	-webkit-flex: $value;
	-moz-flex: $value;
	-ms-flex: $value;
	flex: $value;
}

@mixin justify($value) {
  -webkit-box-pack: $value;
  -webkit-justify-content: $value;
  -moz-box-pack: $value;
  -ms-flex-pack: $value;
  justify-content: $value;
}

@mixin spaceBetween {
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  -ms-flex-pack: justify;
  -webkit-justify-content: space-between;
  justify-content: space-between;
}

@mixin align($value) {
  -webkit-box-align: $value;
  -moz-box-align: $value;
  -ms-flex-align: $value;
  -webkit-align-items: $value;
  align-items: $value;
}

@mixin flexOrder($value) {
	order: $value;
	-webkit-order: $value;
	-ms-flex-order: $value;
}

@mixin alignContent($value) {
	-webkit-align-content: $value;
	-moz-align-content: $value;
	-ms-align-content: $value;
	align-content: $value;
}

@mixin alignSelf($align: auto) {
	-webkit-align-self: $align;
	-moz-align-self: $align;
	-ms-align-self: $align;
	align-self: $align;
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}

@mixin clearfix() {
	&::after {
		display: block;
		content: "";
		clear: both;
	}
}